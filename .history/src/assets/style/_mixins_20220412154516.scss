// =======================
// Tools / Mixins
// =======================

/// Placeholder
///
/// @author Louis Chenais
///
/// @access public
///
/// @example scss - Usage
///   @include placeholder() {
///     color: blue;
///   }
///
/// @example css - CSS output
///   &::-webkit-input-placeholder {
///     color: blue;
///   }
///   &:-moz-placeholder {
///     color: blue;
///   }
///   &:-ms-input-placeholder {
///     color: blue;
///   }
@mixin placeholder() {
  *::-webkit-input-placeholder {
    @content;
  }
  *::-moz-placeholder {
    @content;
    // Fix placeholder opacity for Firefox
    opacity: 1;
  }
  *:-ms-input-placeholder {
    @content;
  }
  *::placeholder {
    @content;
  }
}
/* stylelint-enable */

/// Flexbox vertical Centering (apply this class on the parent element of your targeted children)
@mixin flex-vertical-center {
  display: flex;
  align-items: center;
}

/// Flexbox absolute centering (apply this class on the parent element of your targeted children)
///
/// @author Louis Chenais
///
/// @access public
///
/// @example scss - Usage
///   .foo {
///     @include flex-absolute-center();
///   }
///
/// @example css - CSS output
///   .foo {
///     display: flex;
///     align-items: center;
///     justify-content: center;
///   }
@mixin flex-absolute-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

/// Vertical Center
///
/// @author Louis Chenais
///
/// @access public
///
/// @example scss - Usage
///   .foo {
///     @include vertical-center();
///   }
///
/// @example css - CSS output
///   .foo {
///     position: absolute;
///     top: 50%;
///     transform: translateY(-50%);
///   }
@mixin vertical-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/// Vertical & Horizontal Center
///
/// @author Louis Chenais
///
/// @access public
///
/// @example scss - Usage
///   .foo {
///     @include absolute-center();
///   }
///
/// @example css - CSS output
///   .foo {
///     position: absolute;
///     margin: auto;
///     top: 0;
///     right: 0;
///     bottom: 0;
///     left: 0;
///   }
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/// Mixin helping defining both `width` and `height` simultaneously.
///
/// @author Hugo Giraudel
///
/// @access public
///
/// @param {Length} $width - Element’s `width`
/// @param {Length} $height ($width) - Element’s `height`
///
/// @example scss - Usage
///   .foo {
///     @include size(10em);
///   }
///
///   .bar {
///     @include size(100%, 10em);
///   }
///
/// @example css - CSS output
///   .foo {
///     width: 10em;
///     height: 10em;
///   }
///
///   .bar {
///     width: 100%;
///     height: 10em;
///   }
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}